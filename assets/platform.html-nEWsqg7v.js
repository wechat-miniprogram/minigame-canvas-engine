import{_ as s,c as a,a as p,o as t}from"./app-BDAF0ZOp.js";const e={};function c(o,n){return t(),a("div",null,n[0]||(n[0]=[p(`<h1 id="平台适配" tabindex="-1"><a class="header-anchor" href="#平台适配"><span>平台适配</span></a></h1><p>Layout 最开始设计出来是为了提升微信小游戏开放数据域开发效率，但现在 Layout 已经被用到各种各样的小游戏平台，作为轻量级 Canvas 应用的解决方案。</p><p>对于渲染引擎，一定会依赖平台的能力，比如创建图片、监听事件等，一般引擎的解决方案是主动适配主要运行平台，比如适配浏览器和微信小游戏。Layout 同样如此，目前已经适配了 浏览器、微信小游戏、字节小游戏和百度小游戏平台，但如果一个全新的平台想要使用 Layout，无需更改 Layout 源码，同样可以进行适配，下面进行简单的介绍。</p><h2 id="原理" tabindex="-1"><a class="header-anchor" href="#原理"><span>原理</span></a></h2><p>Layout 对于平台环境的依赖并不多，主要是事件监听、图片创建等，所有平台相关的依赖都被封装到 env 模块，它非常精简，代码如下：</p><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts" data-title="ts"><pre><code><span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> Callback <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;./types&quot;</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> GameGlobal <span class="token operator">!==</span> <span class="token string">&#39;undefined&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  GameGlobal<span class="token punctuation">.</span>__env <span class="token operator">=</span> GameGlobal<span class="token punctuation">.</span>wx <span class="token operator">||</span> GameGlobal<span class="token punctuation">.</span>tt <span class="token operator">||</span> GameGlobal<span class="token punctuation">.</span>swan<span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">const</span> domEventMap<span class="token operator">:</span> Record<span class="token operator">&lt;</span><span class="token builtin">string</span><span class="token punctuation">,</span> <span class="token builtin">string</span><span class="token operator">&gt;</span> <span class="token operator">=</span> <span class="token punctuation">{</span></span>
<span class="line">  touchstart<span class="token operator">:</span> <span class="token string">&#39;mousedown&#39;</span><span class="token punctuation">,</span></span>
<span class="line">  touchmove<span class="token operator">:</span> <span class="token string">&#39;mousemove&#39;</span><span class="token punctuation">,</span></span>
<span class="line">  touchend<span class="token operator">:</span> <span class="token string">&#39;mouseup&#39;</span><span class="token punctuation">,</span></span>
<span class="line">  touchcancel<span class="token operator">:</span> <span class="token string">&#39;mouseleave&#39;</span><span class="token punctuation">,</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">enum</span> eventType <span class="token punctuation">{</span></span>
<span class="line">  on <span class="token operator">=</span> <span class="token string">&#39;on&#39;</span><span class="token punctuation">,</span></span>
<span class="line">  off <span class="token operator">=</span> <span class="token string">&#39;off&#39;</span><span class="token punctuation">,</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">function</span> <span class="token function">genDomTouchEvent</span><span class="token punctuation">(</span>event<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> type<span class="token operator">:</span> eventType<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> document <span class="token operator">!==</span> <span class="token string">&#39;undefined&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">return</span> <span class="token keyword">function</span> <span class="token punctuation">(</span>listener<span class="token operator">:</span> Callback<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">      type <span class="token operator">===</span> eventType<span class="token punctuation">.</span>on <span class="token operator">?</span></span>
<span class="line">        document<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span>event<span class="token punctuation">,</span> listener<span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token operator">:</span> document<span class="token punctuation">.</span><span class="token function">removeEventListener</span><span class="token punctuation">(</span>event<span class="token punctuation">,</span> listener<span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">function</span> <span class="token function">getOnTouchHandler</span><span class="token punctuation">(</span>event<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> type<span class="token operator">:</span> eventType<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> GameGlobal <span class="token operator">!==</span> <span class="token string">&#39;undefined&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">return</span> GameGlobal<span class="token punctuation">.</span>__env<span class="token punctuation">[</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token keyword">type</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>event<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">]</span></span>
<span class="line">  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">return</span> <span class="token function">genDomTouchEvent</span><span class="token punctuation">(</span>domEventMap<span class="token punctuation">[</span>event<span class="token punctuation">.</span><span class="token function">toLowerCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">,</span> type<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token doc-comment comment">/**</span>
<span class="line"> * Layout 可能用在不用的平台，而Layout会依赖平台下面的一些方法来实现具体的功能，比如创建图片</span>
<span class="line"> * 为了更好做平台适配，统一封装 env 模块，不同平台要做适配，替换 env 的具体方法即可</span>
<span class="line"> */</span></span>
<span class="line"><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token comment">// 监听触摸相关事件</span></span>
<span class="line">  onTouchStart<span class="token operator">:</span> <span class="token function">getOnTouchHandler</span><span class="token punctuation">(</span><span class="token string">&#39;TouchStart&#39;</span><span class="token punctuation">,</span> eventType<span class="token punctuation">.</span>on<span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">  onTouchMove<span class="token operator">:</span> <span class="token function">getOnTouchHandler</span><span class="token punctuation">(</span><span class="token string">&#39;TouchMove&#39;</span><span class="token punctuation">,</span> eventType<span class="token punctuation">.</span>on<span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">  onTouchEnd<span class="token operator">:</span> <span class="token function">getOnTouchHandler</span><span class="token punctuation">(</span><span class="token string">&#39;TouchEnd&#39;</span><span class="token punctuation">,</span> eventType<span class="token punctuation">.</span>on<span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">  onTouchCancel<span class="token operator">:</span> <span class="token function">getOnTouchHandler</span><span class="token punctuation">(</span><span class="token string">&#39;TouchCancel&#39;</span><span class="token punctuation">,</span> eventType<span class="token punctuation">.</span>on<span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token comment">// 取消监听触摸相关事件</span></span>
<span class="line">  offTouchStart<span class="token operator">:</span> <span class="token function">getOnTouchHandler</span><span class="token punctuation">(</span><span class="token string">&#39;TouchStart&#39;</span><span class="token punctuation">,</span> eventType<span class="token punctuation">.</span>off<span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">  offTouchMove<span class="token operator">:</span> <span class="token function">getOnTouchHandler</span><span class="token punctuation">(</span><span class="token string">&#39;TouchMove&#39;</span><span class="token punctuation">,</span> eventType<span class="token punctuation">.</span>off<span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">  offTouchEnd<span class="token operator">:</span> <span class="token function">getOnTouchHandler</span><span class="token punctuation">(</span><span class="token string">&#39;TouchEnd&#39;</span><span class="token punctuation">,</span> eventType<span class="token punctuation">.</span>off<span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">  offTouchCancel<span class="token operator">:</span> <span class="token function">getOnTouchHandler</span><span class="token punctuation">(</span><span class="token string">&#39;TouchCancel&#39;</span><span class="token punctuation">,</span> eventType<span class="token punctuation">.</span>off<span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line"></span>
<span class="line">  <span class="token comment">// Layout 支持百分比样式，如果根节点样式设置为 100%，直接取 Canvas 的尺寸，不同平台的取法不一样，因此单独提供函数</span></span>
<span class="line">  <span class="token function">getRootCanvasSize</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> __env <span class="token operator">!==</span> <span class="token string">&#39;undefined&#39;</span> <span class="token operator">&amp;&amp;</span> __env<span class="token punctuation">.</span>getSharedCanvas<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token keyword">const</span> cvs <span class="token operator">=</span> __env<span class="token punctuation">.</span><span class="token function">getSharedCanvas</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">      <span class="token keyword">return</span> <span class="token punctuation">{</span></span>
<span class="line">        width<span class="token operator">:</span> cvs<span class="token punctuation">.</span>width<span class="token punctuation">,</span></span>
<span class="line">        height<span class="token operator">:</span> cvs<span class="token punctuation">.</span>height<span class="token punctuation">,</span></span>
<span class="line">      <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token keyword">return</span> <span class="token punctuation">{</span></span>
<span class="line">        width<span class="token operator">:</span> <span class="token number">300</span><span class="token punctuation">,</span></span>
<span class="line">        height<span class="token operator">:</span> <span class="token number">150</span><span class="token punctuation">,</span></span>
<span class="line">      <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line"></span>
<span class="line">  <span class="token comment">// 取当前设备的 devicePixelRatio，不同平台的取法不一样</span></span>
<span class="line">  <span class="token function">getDevicePixelRatio</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> __env <span class="token operator">!==</span> <span class="token string">&#39;undefined&#39;</span> <span class="token operator">&amp;&amp;</span> __env<span class="token punctuation">.</span>getSystemInfoSync<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token keyword">return</span> __env<span class="token punctuation">.</span><span class="token function">getSystemInfoSync</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>devicePixelRatio<span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>window<span class="token punctuation">.</span>devicePixelRatio<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token keyword">return</span> window<span class="token punctuation">.</span>devicePixelRatio<span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token keyword">return</span> <span class="token number">1</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line"></span>
<span class="line">  <span class="token comment">// 创建Canvas</span></span>
<span class="line">  <span class="token function">createCanvas</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> __env <span class="token operator">!==</span> <span class="token string">&#39;undefined&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token keyword">return</span> __env<span class="token punctuation">.</span><span class="token function">createCanvas</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">return</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">&#39;canvas&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line"></span>
<span class="line">  <span class="token comment">// 创建图片</span></span>
<span class="line">  <span class="token function">createImage</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> __env <span class="token operator">!==</span> <span class="token string">&#39;undefined&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token keyword">return</span> __env<span class="token punctuation">.</span><span class="token function">createImage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">    <span class="token keyword">return</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">&#39;img&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="示例" tabindex="-1"><a class="header-anchor" href="#示例"><span>示例</span></a></h2><p>因此想要实现平台适配，只需要在 Layout 初始化之前魔改 env 模块的实现即可，下面是一个例子：</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> env<span class="token punctuation">,</span> Layout <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;minigame-canvas-engine&#39;</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">env<span class="token punctuation">.</span><span class="token function-variable function">createImage</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">ImageClassInCurrentPlatform</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">env<span class="token punctuation">.</span>onTouchStart <span class="token operator">=</span> currentPlatform<span class="token punctuation">.</span>onTouchStart<span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// 下面正常执行 Layout的使用</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,9)]))}const i=s(e,[["render",c],["__file","platform.html.vue"]]),u=JSON.parse('{"path":"/tutorial/platform.html","title":"平台适配","lang":"en-US","frontmatter":{},"headers":[{"level":2,"title":"原理","slug":"原理","link":"#原理","children":[]},{"level":2,"title":"示例","slug":"示例","link":"#示例","children":[]}],"git":{"updatedTime":1729780904000},"filePathRelative":"tutorial/platform.md"}');export{i as comp,u as data};
