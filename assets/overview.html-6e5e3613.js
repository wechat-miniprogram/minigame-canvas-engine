import{_ as d,r,o,c as l,a as t,b as n,d as s,e}from"./app-ff4dd70b.js";const i={},p=e('<h1 id="布局和样式" tabindex="-1"><a class="header-anchor" href="#布局和样式" aria-hidden="true">#</a> 布局和样式</h1><h2 id="标签" tabindex="-1"><a class="header-anchor" href="#标签" aria-hidden="true">#</a> 标签</h2><p>Layout 通过 xml 组织布局，Layout 支持的标签列表如下。</p><table><thead><tr><th>标签</th><th>说明</th></tr></thead><tbody><tr><td>view</td><td>容器标签，与 HTML 中的 div 相似</td></tr><tr><td>scrollview</td><td>滚动列表容器</td></tr><tr><td>image</td><td>图片标签</td></tr><tr><td>text</td><td>文本标签</td></tr><tr><td>bitmaptext</td><td>bitmapfont 文本标签</td></tr><tr><td>canvas</td><td>对齐 Web，允许获取 context 执行渲染</td></tr></tbody></table><h2 id="属性" tabindex="-1"><a class="header-anchor" href="#属性" aria-hidden="true">#</a> 属性</h2><p>属性是给标签提供的附加信息，每个标签都会通过属性来支持一些特有的功能，下面列举所有标签都会有的属性。</p>',6),c=t("thead",null,[t("tr",null,[t("th",null,"属性"),t("th",null,"类型"),t("th",null,"是否必填"),t("th",null,"说明")])],-1),u=t("tr",null,[t("td",null,"id"),t("td",null,"string"),t("td",null,"否"),t("td",null,[n("非唯一标识，两个标签可以共用 id，可以通过 "),t("strong",null,"Layout.getElementsById"),n(" 获取到元素实例")])],-1),h=t("tr",null,[t("td",null,"class"),t("td",null,"string"),t("td",null,"否"),t("td",null,"与浏览器相同")],-1),b=t("td",null,"dataset",-1),m=t("td",null,"string",-1),g=t("td",null,"否",-1),v={href:"https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/dataset",target:"_blank",rel:"noopener noreferrer"},k=e(`<h2 id="样式" tabindex="-1"><a class="header-anchor" href="#样式" aria-hidden="true">#</a> 样式</h2><p>下面列举 Layout 支持的样式属性。</p><h3 id="布局" tabindex="-1"><a class="header-anchor" href="#布局" aria-hidden="true">#</a> 布局</h3><p>支持的标签：<code>view</code>、<code>scrollview</code>、<code>image</code>、<code>text</code>、<code>bitmaptext</code>、<code>canvas</code></p><table><thead><tr><th>属性名</th><th>支持的值或类型</th><th>默认值</th></tr></thead><tbody><tr><td>width, height</td><td>number/string(百分比场景，如 100%)</td><td>0</td></tr><tr><td>minWidth, minHeight</td><td>number/string(百分比场景，如 100%)</td><td>0</td></tr><tr><td>left, right, top, bottom</td><td>number</td><td>0</td></tr><tr><td>margin, marginLeft, marginRight, marginTop, marginBottom</td><td>number</td><td>0</td></tr><tr><td>padding, paddingLeft, paddingRight, paddingTop, paddingBottom</td><td>number</td><td>0</td></tr><tr><td>borderWidth, borderLeftWidth, borderRightWidth, borderTopWidth, borderBottomWidth</td><td>number</td><td>0</td></tr><tr><td>flexDirection</td><td>column, row</td><td>column</td></tr><tr><td>flexShrink</td><td>number</td><td>1</td></tr><tr><td>flexGrow</td><td>number</td><td></td></tr><tr><td>flexWrap</td><td>wrap, nowrap</td><td>nowrap</td></tr><tr><td>flex</td><td>number</td><td></td></tr><tr><td>justifyContent</td><td>flex-start, center, flex-end, space-between, space-around</td><td>flex-start</td></tr><tr><td>alignItems, alignSelf</td><td>flex-start, center, flex-end, stretch</td><td>flex-start</td></tr><tr><td>position</td><td>relative, absolute</td><td>relative</td></tr></tbody></table><h3 id="伪类" tabindex="-1"><a class="header-anchor" href="#伪类" aria-hidden="true">#</a> 伪类</h3><p>用来添加一些选择器的特殊效果，目前仅支持最场景的 <code>:active</code> 场景，后续会试场景补充。</p><table><thead><tr><th>属性名</th><th>支持的值或类型</th><th>说明</th></tr></thead><tbody><tr><td>&#39;:active&#39;</td><td>Object</td><td><strong>(v1.0.9开始支持)</strong>，当节点触发 &#39;touchstart&#39; 事件的时候触发</td></tr></tbody></table><p>如下所示，当元素被点击的时候，元素会放大，当点击结束，元素又会重置会原样，这对实现按钮特性的时候尤为有用，不需要单独给按钮绑定点击事件手动对元素进行缩放和重置。</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  color<span class="token operator">:</span> &#39;#ffffff&#39;<span class="token punctuation">,</span>
  backgroundColor<span class="token operator">:</span> &#39;#34a123&#39;<span class="token punctuation">,</span>
  borderRadius<span class="token operator">:</span> <span class="token number">10</span><span class="token punctuation">,</span>
  width<span class="token operator">:</span> <span class="token number">400</span><span class="token punctuation">,</span>
  height<span class="token operator">:</span> <span class="token number">120</span><span class="token punctuation">,</span>
  lineHeight<span class="token operator">:</span> <span class="token number">120</span><span class="token punctuation">,</span>
  fontSize<span class="token operator">:</span> <span class="token number">50</span><span class="token punctuation">,</span>
  textAlign<span class="token operator">:</span> &#39;center&#39;<span class="token punctuation">,</span>
  marginTop<span class="token operator">:</span> <span class="token number">20</span><span class="token punctuation">,</span>
  &#39;<span class="token operator">:</span>active&#39;<span class="token operator">:</span> <span class="token punctuation">{</span>
    transform<span class="token operator">:</span> &#39;scale(<span class="token number">1.05</span><span class="token punctuation">,</span> <span class="token number">1.05</span>)&#39;<span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,10),f=t("iframe",{height:"439.15838623046875",style:{width:"100%"},scrolling:"no",title:"Layout Text Button",src:"https://codepen.io/yuanzm/embed/MWRoexw?default-tab=js%2Cresult&editable=true",frameborder:"no",loading:"lazy",allowtransparency:"true",allowfullscreen:"true"},`
  See the Pen <a href="https://codepen.io/yuanzm/pen/MWRoexw">
  Layout Text Button</a> by yuanzm (<a href="https://codepen.io/yuanzm">@yuanzm</a>)
  on <a href="https://codepen.io">CodePen</a>.
`,-1),x=t("h3",{id:"文本",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#文本","aria-hidden":"true"},"#"),n(" 文本")],-1),_=t("p",null,[n("支持的标签："),t("code",null,"text")],-1),y=t("thead",null,[t("tr",null,[t("th",null,"属性名"),t("th",null,"支持的值或类型"),t("th",null,"默认值")])],-1),w=t("tr",null,[t("td",null,"fontSize"),t("td",null,"number"),t("td",null,"14")],-1),S=t("td",null,"fontFamily",-1),C=t("td",null,"string",-1),L={href:"https://developer.mozilla.org/en-US/docs/Web/CSS/font-family",target:"_blank",rel:"noopener noreferrer"},W=t("tr",null,[t("td",null,"lineHeight"),t("td",null,"number / string"),t("td",null,"'1.4em'")],-1),z=t("tr",null,[t("td",null,"textAlign"),t("td",null,"left, center, right"),t("td",null,"left")],-1),B=t("tr",null,[t("td",null,"verticalAlign"),t("td",null,"top, middle, bottom"),t("td",null,"top")],-1),j=t("tr",null,[t("td",null,"color"),t("td",null,"string"),t("td",null,"#000000")],-1),T=t("tr",null,[t("td",null,"backgroundColor"),t("td",null,"string"),t("td")],-1),I=t("tr",null,[t("td",null,"textOverflow"),t("td",null,"ellipsis, clip"),t("td",null,"默认为空，出于性能考虑，只有显式指定 textOverflow 属性的时候才会对文字进行截断处理")],-1),R=t("tr",null,[t("td",null,"letterSpacing"),t("td",null,"number"),t("td",null,"默认值为 0，只对 bitmaptext 标签生效")],-1),E=t("tr",null,[t("td",null,[n("textStrokeWidth "),t("strong",null,"(v1.0.8开始支持)")]),t("td",null,"number"),t("td",null,"文字描边的宽度，默认不描边")],-1),H=t("tr",null,[t("td",null,[n("textStrokeColor "),t("strong",null,"(v1.0.8开始支持)")]),t("td",null,"string"),t("td",null,"描边的颜色，支持 6 位 16 进制、8 位 16 进制、rgb、rgba 四种格式的颜色， 如果指定了描边颜色但是没有指定描边宽度，描边宽度默认设置为1")],-1),O=t("tr",null,[t("td",null,[n("textShadow "),t("strong",null,"(v1.0.8开始支持)")]),t("td",null,"string"),t("td",null,[n("文字阴影效果，textShadow的格式并不是严格的CSS格式，仅支持两种格式 如"),t("code",null,"textShadow: 1px 1px 2px pink"),n("和"),t("code",null,"textShadow: 1px 1px 2px red, 0 0 1px blue, 0 0 1px blue, 1px 1px 2px red"),n("，也就是支持任意数量的阴影效果，每个阴影效果由四个值指定，分别是 shadowOffsetX, shadowOffsetY, shadowBlur, shadowColor")])],-1),A=e(`<div class="custom-container tip"><p class="custom-container-title">textShadow 特殊说明</p><p>微信小游戏开放数据域暂不支持文字阴影效果，近期版本支持中。</p></div><h3 id="容器" tabindex="-1"><a class="header-anchor" href="#容器" aria-hidden="true">#</a> 容器</h3><p>支持的标签：<code>view</code>、<code>scrollview</code>、<code>image</code>、<code>text</code>、<code>bitmaptext</code>、<code>canvas</code></p><table><thead><tr><th>属性</th><th>类型</th><th>默认值</th><th>说明</th></tr></thead><tbody><tr><td>backgroundColor</td><td>string</td><td></td><td>背景的颜色，支持 6 位 16 进制、8 位 16 进制、rgb、rgba 四种格式的颜色</td></tr><tr><td>backgroundImage</td><td>string</td><td></td><td>背景图，格式为 &#39;url(https:/www.foo.com/xxx.png)&#39;</td></tr><tr><td>opacity</td><td>number</td><td>1</td><td>透明度，范围[0, 1]，0表示透明，1表示不透明</td></tr><tr><td>transform</td><td>string</td><td></td><td>transform 属性允许你旋转和缩放给定元素，目前支持的格式 <code>rotate(360deg)</code></td></tr></tbody></table><h4 id="transform-特殊说明" tabindex="-1"><a class="header-anchor" href="#transform-特殊说明" aria-hidden="true">#</a> transform 特殊说明</h4><p>v1.0.5版本开始支持 transform，目前为止，transform 不会递归影响子节点，也就是父节点旋转缩放了之后子节点不会连带旋转缩放，要实现连带旋转缩放的能力，一方面是目前为止需求不够强，另一方面，对代码体积影响较大，会违背 Layout 轻量的初衷，暂时不做改造。</p><p>transform 可以同时指定多个变换，比如需要同时进行旋转和缩放，可以写为<code>rotate(30deg) scale(1.5, 1.5)</code>代表先旋转30度然后进行1.5倍放大。</p><p><strong>transform 不会影响布局仅仅影响渲染，在重新设置transform的时候，不需要重新计算布局，这意味着做一些动画它的性能更好。</strong></p><table><thead><tr><th>属性</th><th>兼容性</th><th>示例</th><th>说明</th></tr></thead><tbody><tr><td>rotate</td><td>&gt;=v1.0.5</td><td>transform: &#39;rotate(30deg)&#39;</td><td>元素旋转一定的角度，0 ~ 360 deg代表旋转一周，rotate 特性一般用来做loading效果，详情可见<a href="../tutorial/loading">教程</a>。</td></tr><tr><td>scale</td><td>&gt;=1.0.9</td><td>transform: &#39;scale(1.5, 1.5)&#39;</td><td>分别指定X轴和Y轴的缩放。</td></tr></tbody></table><h3 id="边框" tabindex="-1"><a class="header-anchor" href="#边框" aria-hidden="true">#</a> 边框</h3><p>支持的标签：<code>view</code>、<code>scrollview</code>、<code>image</code>、<code>text</code>、<code>bitmaptext</code>、<code>canvas</code></p><table><thead><tr><th>属性</th><th>类型</th><th>默认值</th><th>说明</th></tr></thead><tbody><tr><td>borderRadius</td><td>number</td><td></td><td>边框圆角</td></tr><tr><td>borderColor</td><td>string</td><td></td><td>边框颜色，支持 6 位 16 进制、8 位 16 进制、rgb、rgba 四种格式的颜色</td></tr></tbody></table><h3 id="默认样式" tabindex="-1"><a class="header-anchor" href="#默认样式" aria-hidden="true">#</a> 默认样式</h3><p>如果一个标签没有任何自定义样式，那么它遵循下面的默认样式：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token punctuation">{</span>
  <span class="token literal-property property">position</span><span class="token operator">:</span> <span class="token string">&#39;relative&#39;</span><span class="token punctuation">;</span>
  <span class="token literal-property property">display</span><span class="token operator">:</span> <span class="token string">&#39;flex&#39;</span><span class="token punctuation">;</span>
  <span class="token literal-property property">flexDirection</span><span class="token operator">:</span> <span class="token string">&#39;column&#39;</span><span class="token punctuation">;</span>
  <span class="token literal-property property">alignItems</span><span class="token operator">:</span> <span class="token string">&#39;stretch&#39;</span><span class="token punctuation">;</span>
  <span class="token literal-property property">flexShrink</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">;</span>
  <span class="token literal-property property">alignContent</span><span class="token operator">:</span> <span class="token string">&#39;flex-start&#39;</span><span class="token punctuation">;</span>
  <span class="token literal-property property">borderWidth</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
  <span class="token literal-property property">borderColor</span><span class="token operator">:</span> <span class="token string">&#39;black&#39;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">margin</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">;</span>
  <span class="token literal-property property">padding</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,15);function M(N,V){const a=r("ExternalLinkIcon");return o(),l("div",null,[p,t("table",null,[c,t("tbody",null,[u,h,t("tr",null,[b,m,g,t("td",null,[n("与浏览器相同，详见"),t("a",v,[n("文档"),s(a)])])])])]),k,f,x,_,t("table",null,[y,t("tbody",null,[w,t("tr",null,[S,C,t("td",null,[n("无默认值，规则对齐 CSS 的font-family，详情可见"),t("a",L,[n("font-family"),s(a)]),n("，参考值如 'Georgia, serif'")])]),W,z,B,j,T,I,R,E,H,O])]),A])}const D=d(i,[["render",M],["__file","overview.html.vue"]]);export{D as default};
