import{_ as l,r as c,o as u,c as d,f as o,a as s,b as n,d as a,w as i,e}from"./app-ea6643d5.js";const r={},m=e('<h1 id="element" tabindex="-1"><a class="header-anchor" href="#element" aria-hidden="true">#</a> Element</h1><p>Element 是所有组件的基类，Element 描述了所有组件所普遍具有的方法和属性。一些组件继承自 Element 并且增加了一些额外功能的接口描述了具体的行为。</p><h2 id="xml属性" tabindex="-1"><a class="header-anchor" href="#xml属性" aria-hidden="true">#</a> xml属性</h2><table><thead><tr><th>属性</th><th>类型</th><th>说明</th></tr></thead><tbody><tr><td>dataset</td><td>Object</td><td>标签上通过 <strong>data-*</strong> 设置的属性会存到 dataset 字段，方便记录一些节点信息</td></tr></tbody></table>',4),k=e(`<h2 id="方法" tabindex="-1"><a class="header-anchor" href="#方法" aria-hidden="true">#</a> 方法</h2><h3 id="getelementsbyid-elementid-string-element" tabindex="-1"><a class="header-anchor" href="#getelementsbyid-elementid-string-element" aria-hidden="true">#</a> getElementsById(elementId: string): Element[]</h3><p>获取元素id为<strong>elementId</strong>的一组元素，之所以是一组元素是因为这里 id 的实现没有对齐 Web，id并不是唯一的，只是一个标识。</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// &lt;view id=&quot;container&quot;&gt;&lt;/view&gt;</span>
<span class="token keyword">const</span> container <span class="token operator">=</span> Layout<span class="token punctuation">.</span><span class="token function">getElementsById</span><span class="token punctuation">(</span><span class="token string">&#39;container&#39;</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="getelementbyid" tabindex="-1"><a class="header-anchor" href="#getelementbyid" aria-hidden="true">#</a> getElementById</h3><div class="custom-container tip"><p class="custom-container-title">兼容性</p><p>v1.0.1版本开始支持</p></div><p>Layout.getElementById(String elementId)</p><p>获取元素id为<strong>elementId</strong>的第一个节点，id唯一性由业务侧自行保证。</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// &lt;view id=&quot;container&quot;&gt;&lt;/view&gt;</span>
<span class="token keyword">const</span> container <span class="token operator">=</span> Layout<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&#39;container&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="getelementsbyclassname-classname-string-element" tabindex="-1"><a class="header-anchor" href="#getelementsbyclassname-classname-string-element" aria-hidden="true">#</a> getElementsByClassName(className: string): Element[]</h3><p>获取包含class为<strong>className</strong>的一组元素。</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 * &lt;view id=&quot;container&quot;&gt;
    &lt;view class=&quot;item&quot;&gt;&lt;/view&gt;
    &lt;view class=&quot;item&quot;&gt;&lt;/view&gt;
    &lt;view class=&quot;item&quot;&gt;&lt;/view&gt;
   &lt;/view&gt;
 */</span>
<span class="token keyword">const</span> list <span class="token operator">=</span> Layout<span class="token punctuation">.</span><span class="token function">getElementsByClassName</span><span class="token punctuation">(</span><span class="token string">&#39;item&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>list<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 3</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,12),v={id:"getboundingclientrect-rect",tabindex:"-1"},h=s("a",{class:"header-anchor",href:"#getboundingclientrect-rect","aria-hidden":"true"},"#",-1),g=s("p",null,[n("返回一个组件在"),s("strong",null,"canvas"),n("画布中的位置和尺寸信息。")],-1),b={id:"getviewportrect-rect",tabindex:"-1"},_=s("a",{class:"header-anchor",href:"#getviewportrect-rect","aria-hidden":"true"},"#",-1),f=s("strong",null,"屏幕",-1),y={href:"/api/api.html#updateviewport",target:"_blank",rel:"noopener noreferrer"},w=e(`<h3 id="appendchild-ele-element" tabindex="-1"><a class="header-anchor" href="#appendchild-ele-element" aria-hidden="true">#</a> appendChild(ele: Element)</h3><p>给一个组件添加子节点，这通常用于拷贝A组件之后添加到A组件的父容器，避免重新执行 Layout.init 流程，提升性能。</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// 获取 ScrollView</span>
<span class="token keyword">const</span> list <span class="token operator">=</span> Layout<span class="token punctuation">.</span><span class="token function">getElementsByClassName</span><span class="token punctuation">(</span><span class="token string">&#39;list&#39;</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token comment">// 获取列表的每一项</span>
<span class="token keyword">const</span> listItem <span class="token operator">=</span> list<span class="token punctuation">.</span><span class="token function">getElementsByClassName</span><span class="token punctuation">(</span><span class="token string">&#39;listItem&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

listItem<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">item</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  list<span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span>Layout<span class="token punctuation">.</span><span class="token function">cloneNode</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h1 id="事件" tabindex="-1"><a class="header-anchor" href="#事件" aria-hidden="true">#</a> 事件</h1><p>通过 getElementsById 或者 getElementsByClassName 获取元素之后，可以的绑定事件，支持的事件有<code>touchstart</code>、<code>touchmove</code>、<code>touchend</code>、<code>touchcancel</code>、<code>click</code>、<code>scroll(只有scrollview支持）</code>示例如下：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> list <span class="token operator">=</span> Layout<span class="token punctuation">.</span><span class="token function">getElementsByClassName</span><span class="token punctuation">(</span><span class="token string">&#39;listItem&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

list<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">item</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  item<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;touchstart&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>e<span class="token punctuation">,</span> item<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,6);function x(E,N){const t=c("RouterLink"),p=c("ExternalLinkIcon");return u(),d("div",null,[m,o(" | layoutBox | Object | 组件在 canvas 渲染的位置和尺寸信息                                         | "),o(` 
### layoutBox
::: tip
坐标系原点为左上角，一般而言根节点的尺寸与渲染目标 canvas 的尺寸一致。
:::

| key       | 类型   | 说明                  |
| --------- | ------ | --------------------- |
| absoluteX | Number | 组件被渲染到 canvas 上坐标的 X 值 |
| absoluteY | Number | 组件被渲染到 canvas 上坐标的 Y 值 |
| width | Number | 组件宽度 |
| height | Number | 组件高度 |
| left | Number | 以父节点左上角为坐标系原点的 X 坐标值 |
| top | Number | 以父节点左上角为坐标系原点的 Y 坐标值 | `),k,s("h3",v,[h,n(" getBoundingClientRect(): "),a(t,{to:"/components/rect.html"},{default:i(()=>[n("Rect")]),_:1})]),g,s("h3",b,[_,n(" getViewportRect(): "),a(t,{to:"/components/rect.html"},{default:i(()=>[n("Rect")]),_:1})]),s("p",null,[n("返回一个组件在"),f,n("中的位置和尺寸信息，前提是正确调用"),s("a",y,[n("updateViewPort"),a(p)]),n("。")]),w])}const j=l(r,[["render",x],["__file","element.html.vue"]]);export{j as default};
