import{_ as n,c as e,o as l,ag as t,j as s,a}from"./chunks/framework.BpL07XgQ.js";const y=JSON.parse('{"title":"概览","description":"","frontmatter":{},"headers":[],"relativePath":"plugin/guide.md","filePath":"plugin/guide.md","lastUpdated":1745475792000}'),p={name:"plugin/guide.md"};function h(k,i,r,o,d,E){return l(),e("div",null,i[0]||(i[0]=[t(`<h1 id="概览" tabindex="-1">概览 <a class="header-anchor" href="#概览" aria-label="Permalink to &quot;概览&quot;">​</a></h1><p>随着应用场景变多，不可避免需要新增一些组件来满足需求，而 Layout 设计里面很重要的一个点是轻量，所以提供了插件机制来满足这些场景。</p><h4 id="插件开发" tabindex="-1">插件开发 <a class="header-anchor" href="#插件开发" aria-label="Permalink to &quot;插件开发&quot;">​</a></h4><p>插件借鉴了 Vue 的设计，对插件能做什么，没什么限制，插件只需要暴露一个 install 方法和 name 即可，Layout.use 方法实现插件的安装。一个最简单的插件示意如下</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> HelloPlugin</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  install</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">Layout</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    Layout.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sayHello</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> () </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Hello Layout Plugin&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  name: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Hello&#39;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Layout.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">use</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(HelloPlugin);</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Layout.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sayHello</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 控制台打印 Hello Layout Plugin</span></span></code></pre></div><p>如果有需要，可以提供插件的 uninstall方法，通过 Layout.unUse 可以卸载插件。</p>`,6),s("iframe",{height:"449.01165771484375",style:{width:"100%"},scrolling:"no",title:"Layout Plugin",src:"https://codepen.io/yuanzm/embed/wvQvrNo?default-tab=js%2Cresult&editable=true",frameborder:"no",loading:"lazy",allowtransparency:"true",allowfullscreen:"true"},[a(" See the Pen "),s("a",{href:"https://codepen.io/yuanzm/pen/wvQvrNo"}," Layout Plugin"),a(" by yuanzm ("),s("a",{href:"https://codepen.io/yuanzm"},"@yuanzm"),a(") on "),s("a",{href:"https://codepen.io"},"CodePen"),a(". ")],-1)]))}const u=n(p,[["render",h]]);export{y as __pageData,u as default};
