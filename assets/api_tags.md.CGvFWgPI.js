import{_ as t,c as i,o as a,ag as h}from"./chunks/framework.BpL07XgQ.js";const n="/minigame-canvas-engine/assets/bitmapfont.CQMTNUv-.png",g=JSON.parse('{"title":"标签","description":"","frontmatter":{},"headers":[],"relativePath":"api/tags.md","filePath":"api/tags.md","lastUpdated":1749365113000}'),e={name:"api/tags.md"};function l(d,s,p,k,r,E){return a(),i("div",null,s[0]||(s[0]=[h(`<h1 id="标签" tabindex="-1">标签 <a class="header-anchor" href="#标签" aria-label="Permalink to &quot;标签&quot;">​</a></h1><h2 id="标签列表" tabindex="-1">标签列表 <a class="header-anchor" href="#标签列表" aria-label="Permalink to &quot;标签列表&quot;">​</a></h2><table tabindex="0"><thead><tr><th>标签</th><th>说明</th></tr></thead><tbody><tr><td>view</td><td>容器标签，与HTML中的div相似</td></tr><tr><td>scrollview</td><td>滚动列表容器，如果容器内的子元素高度大于scrollview高度，支持纵向滚动，不支持嵌套scrollview</td></tr><tr><td>image</td><td>图片标签</td></tr><tr><td>text</td><td>文本标签</td></tr><tr><td>bitmaptext</td><td>bitmapfont文本标签</td></tr><tr><td>canvas</td><td>对齐 Web，允许获取 context执行渲染</td></tr></tbody></table><h2 id="公共属性" tabindex="-1">公共属性 <a class="header-anchor" href="#公共属性" aria-label="Permalink to &quot;公共属性&quot;">​</a></h2><p>每个标签都会通过属性来支持一些特有的功能，下面列举所有标签都会有的属性。</p><table tabindex="0"><thead><tr><th>属性</th><th>类型</th><th>是否必填</th><th>说明</th></tr></thead><tbody><tr><td>id</td><td>string</td><td>否</td><td>非唯一标识，两个标签可以共用id，可以通过 <strong>Layout.getElementsById</strong> 获取到元素实例</td></tr><tr><td>class</td><td>string</td><td>否</td><td>与浏览器相同</td></tr><tr><td>dataset</td><td>string</td><td>否</td><td>与浏览器相同，详见<a href="https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/dataset" target="_blank" rel="noreferrer">文档</a></td></tr></tbody></table><h2 id="view" tabindex="-1">view <a class="header-anchor" href="#view" aria-label="Permalink to &quot;view&quot;">​</a></h2><p>view标签用来页面布局，布局严格遵循<a href="https://developer.mozilla.org/en-US/docs/Web/CSS/flex" target="_blank" rel="noreferrer">CSS Flex布局</a>，节点在Flex属性相互作用的结果可以通过Yoga的<a href="https://yogalayout.com/playground" target="_blank" rel="noreferrer">Playground</a>试验。</p><h2 id="image" tabindex="-1">image <a class="header-anchor" href="#image" aria-label="Permalink to &quot;image&quot;">​</a></h2><h3 id="特殊属性" tabindex="-1">特殊属性 <a class="header-anchor" href="#特殊属性" aria-label="Permalink to &quot;特殊属性&quot;">​</a></h3><table tabindex="0"><thead><tr><th>属性</th><th>类型</th><th>是否必填</th><th>说明</th></tr></thead><tbody><tr><td>src</td><td>string</td><td>是</td><td>图片链接</td></tr></tbody></table><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>1.小游戏开放数据域场景图片路径不需要加./作为前缀，以小游戏根目录作为根目录；</p><p>2.图片可以通过API<a href="/minigame-canvas-engine/api/api.html#loadimgs">loadImgs</a>实现预加载</p></div><h2 id="text" tabindex="-1">text <a class="header-anchor" href="#text" aria-label="Permalink to &quot;text&quot;">​</a></h2><h3 id="特殊属性-1" tabindex="-1">特殊属性 <a class="header-anchor" href="#特殊属性-1" aria-label="Permalink to &quot;特殊属性&quot;">​</a></h3><table tabindex="0"><thead><tr><th>属性</th><th>类型</th><th>是否必填</th><th>说明</th></tr></thead><tbody><tr><td>value</td><td>string</td><td>是</td><td>文字内容</td></tr></tbody></table><h3 id="特殊样式" tabindex="-1">特殊样式 <a class="header-anchor" href="#特殊样式" aria-label="Permalink to &quot;特殊样式&quot;">​</a></h3><table tabindex="0"><thead><tr><th>属性</th><th>类型</th><th>是否必填</th><th>说明</th></tr></thead><tbody><tr><td>textOverflow</td><td>string</td><td>否</td><td>文字溢出处理方式，默认不处理，ellipsis则支持自动截断</td></tr><tr><td>textAlign</td><td>string</td><td>否</td><td>文字水平居中方式，默认left，支持right、center</td></tr></tbody></table><h2 id="scrollview" tabindex="-1">scrollview <a class="header-anchor" href="#scrollview" aria-label="Permalink to &quot;scrollview&quot;">​</a></h2><p>滚动内容的容器，滚动的前提是正确调用<a href="/minigame-canvas-engine/api/api.html#updateviewport">updateViewPort</a></p><h3 id="特殊样式-1" tabindex="-1">特殊样式 <a class="header-anchor" href="#特殊样式-1" aria-label="Permalink to &quot;特殊样式&quot;">​</a></h3><table tabindex="0"><thead><tr><th>属性</th><th>类型</th><th>是否必填</th><th>说明</th></tr></thead><tbody><tr><td>scrollX</td><td>string</td><td>否</td><td>是否需要横向滚动，支持 &quot;true&quot;和&quot;false&quot;，默认值为 &quot;false&quot;</td></tr><tr><td>scrollY</td><td>string</td><td>否</td><td>是否需要纵向滚动，支持 &quot;true&quot;和&quot;false&quot;, 默认值为&quot;false&quot;</td></tr></tbody></table><h2 id="bitmapfont" tabindex="-1">bitmapfont <a class="header-anchor" href="#bitmapfont" aria-label="Permalink to &quot;bitmapfont&quot;">​</a></h2><p>在游戏开发里面，为了更好的视觉效果，经常要将一些常用文字经过设计成图片，然后打包成特殊的字体，称为BitmapFont，基本上所有的游戏引擎都支持了这种技术。</p><p>本渲染引擎调研了常见的H5游戏引擎Laya、Cocos、Egret，他们普遍支持<a href="https://www.angelcode.com/products/bmfont/" target="_blank" rel="noreferrer">AngelCode.com</a>打包后的配置文件规范，因此biamapfont 同样只支持通过该工具打包后的文件。</p><p>需要特别注意的是，对于一般的游戏引擎而言，都会在自己的IDE里面将.fnt打包进代码里面，这里为了引擎轻量化，需要通过API<a href="/minigame-canvas-engine/api/api.html#registbitmapfont">registBitMapFont</a>手动注册字体。 然后在标签里面通过font属性声明需要使用的字体。</p><div class="language-html vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#FDAEB7;--shiki-dark-font-style:italic;">bitmaptext</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> font</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;fnt_number-export&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> class</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;title&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> value</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;等级&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;&lt;/</span><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#FDAEB7;--shiki-dark-font-style:italic;">bitmaptext</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">title</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  width</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">144</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  fontSize</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">48</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  height</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">120</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  lineHeight</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">50</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  textAlign</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;center&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  verticalAlign</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;top&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  fontWeight</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;bold&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  borderBottomWidth</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">6</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  borderColor</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;#000000&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h3 id="特殊样式-2" tabindex="-1">特殊样式 <a class="header-anchor" href="#特殊样式-2" aria-label="Permalink to &quot;特殊样式&quot;">​</a></h3><table tabindex="0"><thead><tr><th>属性</th><th>类型</th><th>是否必填</th><th>说明</th></tr></thead><tbody><tr><td>width</td><td>Number</td><td>是</td><td>文字的容器宽度，当width大于文字实际绘制占据的宽度，textAlign生效</td></tr><tr><td>height</td><td>Number</td><td>是</td><td>文字的容器高度，当height大于lineHeight，verticalAlign属性生效</td></tr><tr><td>lineHeight</td><td>Number</td><td>否</td><td>渲染文字的行高，默认为配置文件里面的lineHeight</td></tr><tr><td>textAlign</td><td>String</td><td>否</td><td>文字水平居中方式，默认left，支持right、center</td></tr><tr><td>verticalAlign</td><td>String</td><td>否</td><td>文字垂直居中的方式，默认为middle，支持top和bottom</td></tr><tr><td>letterSpacing</td><td>Number</td><td>否</td><td>字符间距</td></tr></tbody></table><h3 id="示例" tabindex="-1">示例 <a class="header-anchor" href="#示例" aria-label="Permalink to &quot;示例&quot;">​</a></h3><img src="`+n+`" width="400"><h2 id="canvas" tabindex="-1">canvas <a class="header-anchor" href="#canvas" aria-label="Permalink to &quot;canvas&quot;">​</a></h2><h3 id="特殊属性-2" tabindex="-1">特殊属性 <a class="header-anchor" href="#特殊属性-2" aria-label="Permalink to &quot;特殊属性&quot;">​</a></h3><table tabindex="0"><thead><tr><th>属性</th><th>类型</th><th>是否必填</th><th>说明</th></tr></thead><tbody><tr><td>width</td><td>Number</td><td>否</td><td>canvas 画布的尺寸，与样式的尺寸不是一个概念</td></tr><tr><td>height</td><td>Number</td><td>否</td><td>canvas 画布的尺寸，与样式的尺寸不是一个概念</td></tr><tr><td>autoCreateCanvas</td><td>String</td><td>否</td><td>是否自动创建 canvas，默认为 &quot;false&quot;，有些场景如微信小游戏场景，sharedCavans非业务创建，则需要手动设置canvas 实例</td></tr></tbody></table><div class="language-html vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#FDAEB7;--shiki-dark-font-style:italic;">view</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> id</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;container&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">canvas</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> id</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;rank&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> width</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;300&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> height</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;300&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">canvas</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#FDAEB7;--shiki-dark-font-style:italic;">view</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">let</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> style </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  container: {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    width: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">500</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    height: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">500</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    backgroundColor: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;#f3f3f3&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  rank: {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    width: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">300</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    height: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">300</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> rank</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Layout.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getElementsById</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;rank&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">];</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> updateRank</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> () </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  rank.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">update</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 手动指定 canvas 实例</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">rank.canvas </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> sharedCanvas; </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// sharedCanvas 为业务自己管理的 canvas 实例</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 要求Layout每帧刷新开放数据域 canvas 的绘制</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Layout.ticker.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">add</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(updateRank);</span></span></code></pre></div>`,37)]))}const c=t(e,[["render",l]]);export{g as __pageData,c as default};
