import{_ as a,c as r,a as i,b as n,d as s,o as l}from"./app-BDAF0ZOp.js";const o={},p=["src"],d=["src"],h=["src"],g=["src"],m=["src"],u=["src"],c=["src"];function w(t,e){return l(),r("div",null,[e[4]||(e[4]=i('<h2 id="简介" tabindex="-1"><a class="header-anchor" href="#简介"><span>简介</span></a></h2><p>当我们开发一个canvas应用的时候，出于效率的考量，免不了要选择一个渲染引擎（比如<strong>PixiJS</strong>)或者工具链更完备的游戏引擎（比如<strong>Cocos Creator</strong>、<strong>Layabox</strong>)。</p><p>渲染引擎通常会有Sprite的概念，一个完整的界面会由很多的Sprite组成，如果编写复杂一点的界面，代码里面会充斥创建精灵、设置精灵位置和样式的“重复代码”，最终我们得到了极致的渲染性能却牺牲了代码的可读性。</p><p>为了解决这个问题，游戏引擎通常会有配套的IDE，界面通过拖拽即可生成，最终导出场景配置文件，这大大方便了UI开发，但是游戏引擎一般都很庞大，有时候我们仅仅想开发个好友排行榜。</p><p>如果有一款渲染引擎，既能用配置文件的方式来表达界面，又可以做到轻量级，将会大大满足我们开发轻量级 canvas 应用的场景，minigame-canvas-engine 应运而生(后面简称 <strong>Layout</strong> )</p><p>Layout 的目标在于用 Web 的开发方式来开发简单的 Canvas 应用。</p><p>有兴趣可以查看详细原理介绍<a href="https://segmentfault.com/a/1190000021297495?_ea=27021986" target="_blank" rel="noopener noreferrer">文章</a>。</p><h2 id="web端调试" tabindex="-1"><a class="header-anchor" href="#web端调试"><span>web端调试</span></a></h2><p>为了方便调试，可以基于 codepen <a href="https://codepen.io/pen?template=VwEeLKw" target="_blank" rel="noopener noreferrer">模板</a> 构建demo，旧版本<a href="https://wechat-miniprogram.github.io/minigame-canvas-engine/playground.html" target="_blank" rel="noopener noreferrer">Playground</a>已不再维护。</p><h2 id="效果预览" tabindex="-1"><a class="header-anchor" href="#效果预览"><span>效果预览</span></a></h2>',10)),n("img",{src:t.$withBase("/imgs/screenshot.gif"),width:"300"},null,8,p),e[5]||(e[5]=n("h2",{id:"谁在使用",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#谁在使用"},[n("span",null,"谁在使用")])],-1)),e[6]||(e[6]=n("p",null,"目前在微信小游戏平台已经超过1000+游戏使用 Layout 来开发开放数据域能力。",-1)),n("p",null,[n("img",{src:t.$withBase("/imgs/demo.png"),width:"120"},null,8,d),e[0]||(e[0]=s()),n("img",{src:t.$withBase("/imgs/ditiepaoku.png"),width:"120"},null,8,h),e[1]||(e[1]=s()),n("img",{src:t.$withBase("/imgs/dazhanggui.jpeg"),width:"120"},null,8,g),e[2]||(e[2]=s()),n("img",{src:t.$withBase("/imgs/jiuchongshilian.jpeg"),width:"120"},null,8,m),e[3]||(e[3]=s()),n("img",{src:t.$withBase("/imgs/lvxingchuanchuan.jpeg"),width:"120"},null,8,u)]),e[7]||(e[7]=n("h2",{id:"交流群",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#交流群"},[n("span",null,"交流群")])],-1)),e[8]||(e[8]=n("p",null,[s("如果遇到 Layout 是用上的问题或者有合理的需求想要支持，欢迎加入 Layout 交流QQ群探讨，如需反馈问题，请基于 codepen "),n("a",{href:"https://codepen.io/pen?template=VwEeLKw",target:"_blank",rel:"noopener noreferrer"},"模板"),s(" 构建可复现问题的最小demo。")],-1)),n("img",{src:t.$withBase("/imgs/qq.jpg"),width:"200"},null,8,c)])}const b=a(o,[["render",w],["__file","index.html.vue"]]),v=JSON.parse('{"path":"/","title":"","lang":"en-US","frontmatter":{},"headers":[{"level":2,"title":"简介","slug":"简介","link":"#简介","children":[]},{"level":2,"title":"web端调试","slug":"web端调试","link":"#web端调试","children":[]},{"level":2,"title":"效果预览","slug":"效果预览","link":"#效果预览","children":[]},{"level":2,"title":"谁在使用","slug":"谁在使用","link":"#谁在使用","children":[]},{"level":2,"title":"交流群","slug":"交流群","link":"#交流群","children":[]}],"git":{"updatedTime":1729780904000},"filePathRelative":"README.md"}');export{b as comp,v as data};
