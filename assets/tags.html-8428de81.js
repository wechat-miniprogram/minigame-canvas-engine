import{_ as o,r as l,o as r,c as i,a as t,b as a,d as s,e}from"./app-ff4dd70b.js";const d={},c=e('<h1 id="标签" tabindex="-1"><a class="header-anchor" href="#标签" aria-hidden="true">#</a> 标签</h1><h2 id="标签列表" tabindex="-1"><a class="header-anchor" href="#标签列表" aria-hidden="true">#</a> 标签列表</h2><table><thead><tr><th>标签</th><th>说明</th></tr></thead><tbody><tr><td>view</td><td>容器标签，与HTML中的div相似</td></tr><tr><td>scrollview</td><td>滚动列表容器，如果容器内的子元素高度大于scrollview高度，支持纵向滚动，不支持嵌套scrollview</td></tr><tr><td>image</td><td>图片标签</td></tr><tr><td>text</td><td>文本标签</td></tr><tr><td>bitmaptext</td><td>bitmapfont文本标签</td></tr><tr><td>canvas</td><td>对齐 Web，允许获取 context执行渲染</td></tr></tbody></table><h2 id="公共属性" tabindex="-1"><a class="header-anchor" href="#公共属性" aria-hidden="true">#</a> 公共属性</h2><p>每个标签都会通过属性来支持一些特有的功能，下面列举所有标签都会有的属性。</p>',5),u=t("thead",null,[t("tr",null,[t("th",null,"属性"),t("th",null,"类型"),t("th",null,"是否必填"),t("th",null,"说明")])],-1),h=t("tr",null,[t("td",null,"id"),t("td",null,"string"),t("td",null,"否"),t("td",null,[a("非唯一标识，两个标签可以共用id，可以通过 "),t("strong",null,"Layout.getElementsById"),a(" 获取到元素实例")])],-1),k=t("tr",null,[t("td",null,"class"),t("td",null,"string"),t("td",null,"否"),t("td",null,"与浏览器相同")],-1),v=t("td",null,"dataset",-1),b=t("td",null,"string",-1),m=t("td",null,"否",-1),g={href:"https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/dataset",target:"_blank",rel:"noopener noreferrer"},_=t("h2",{id:"view",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#view","aria-hidden":"true"},"#"),a(" view")],-1),f={href:"https://developer.mozilla.org/en-US/docs/Web/CSS/flex",target:"_blank",rel:"noopener noreferrer"},y={href:"https://yogalayout.com/playground",target:"_blank",rel:"noopener noreferrer"},x=e('<h2 id="image" tabindex="-1"><a class="header-anchor" href="#image" aria-hidden="true">#</a> image</h2><h3 id="特殊属性" tabindex="-1"><a class="header-anchor" href="#特殊属性" aria-hidden="true">#</a> 特殊属性</h3><table><thead><tr><th>属性</th><th>类型</th><th>是否必填</th><th>说明</th></tr></thead><tbody><tr><td>src</td><td>string</td><td>是</td><td>图片链接</td></tr></tbody></table>',3),q={class:"custom-container tip"},w=t("p",{class:"custom-container-title"},"TIP",-1),C=t("p",null,"1.小游戏开放数据域场景图片路径不需要加./作为前缀，以小游戏根目录作为根目录；",-1),S={href:"/api/api.html#loadimgs",target:"_blank",rel:"noopener noreferrer"},A=e('<h2 id="text" tabindex="-1"><a class="header-anchor" href="#text" aria-hidden="true">#</a> text</h2><h3 id="特殊属性-1" tabindex="-1"><a class="header-anchor" href="#特殊属性-1" aria-hidden="true">#</a> 特殊属性</h3><table><thead><tr><th>属性</th><th>类型</th><th>是否必填</th><th>说明</th></tr></thead><tbody><tr><td>value</td><td>string</td><td>是</td><td>文字内容</td></tr></tbody></table><h3 id="特殊样式" tabindex="-1"><a class="header-anchor" href="#特殊样式" aria-hidden="true">#</a> 特殊样式</h3><table><thead><tr><th>属性</th><th>类型</th><th>是否必填</th><th>说明</th></tr></thead><tbody><tr><td>textOverflow</td><td>string</td><td>否</td><td>文字溢出处理方式，默认不处理，ellipsis则支持自动截断</td></tr><tr><td>textAlign</td><td>string</td><td>否</td><td>文字水平居中方式，默认left，支持right、center</td></tr></tbody></table><h2 id="scrollview" tabindex="-1"><a class="header-anchor" href="#scrollview" aria-hidden="true">#</a> scrollview</h2>',6),I={href:"/api/api.html#updateviewport",target:"_blank",rel:"noopener noreferrer"},N=e('<h3 id="特殊样式-1" tabindex="-1"><a class="header-anchor" href="#特殊样式-1" aria-hidden="true">#</a> 特殊样式</h3><table><thead><tr><th>属性</th><th>类型</th><th>是否必填</th><th>说明</th></tr></thead><tbody><tr><td>scrollX</td><td>string</td><td>否</td><td>是否需要横向滚动，支持 &quot;true&quot;和&quot;false&quot;，默认值为 &quot;false&quot;</td></tr><tr><td>scrollY</td><td>string</td><td>否</td><td>是否需要纵向滚动，支持 &quot;true&quot;和&quot;false&quot;, 默认值为&quot;false&quot;</td></tr></tbody></table><h2 id="bitmapfont" tabindex="-1"><a class="header-anchor" href="#bitmapfont" aria-hidden="true">#</a> bitmapfont</h2><p>在游戏开发里面，为了更好的视觉效果，经常要将一些常用文字经过设计成图片，然后打包成特殊的字体，称为BitmapFont，基本上所有的游戏引擎都支持了这种技术。</p>',4),j={href:"https://www.angelcode.com/products/bmfont/",target:"_blank",rel:"noopener noreferrer"},B={href:"/api/api.html#registbitmapfont",target:"_blank",rel:"noopener noreferrer"},L=e(`<div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>bitmaptext</span> <span class="token attr-name">font</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>fnt_number-export<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>title<span class="token punctuation">&quot;</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>等级<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>bitmaptext</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">width</span><span class="token operator">:</span> <span class="token number">144</span><span class="token punctuation">,</span>
  <span class="token literal-property property">fontSize</span><span class="token operator">:</span> <span class="token number">48</span><span class="token punctuation">,</span>
  <span class="token literal-property property">height</span><span class="token operator">:</span> <span class="token number">120</span><span class="token punctuation">,</span>
  <span class="token literal-property property">lineHeight</span><span class="token operator">:</span> <span class="token number">50</span><span class="token punctuation">,</span>
  <span class="token literal-property property">textAlign</span><span class="token operator">:</span> <span class="token string">&#39;center&#39;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">verticalAlign</span><span class="token operator">:</span> <span class="token string">&#39;top&#39;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">fontWeight</span><span class="token operator">:</span> <span class="token string">&#39;bold&#39;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">borderBottomWidth</span><span class="token operator">:</span> <span class="token number">6</span><span class="token punctuation">,</span>
  <span class="token literal-property property">borderColor</span><span class="token operator">:</span> <span class="token string">&#39;#000000&#39;</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="特殊样式-2" tabindex="-1"><a class="header-anchor" href="#特殊样式-2" aria-hidden="true">#</a> 特殊样式</h3><table><thead><tr><th>属性</th><th>类型</th><th>是否必填</th><th>说明</th></tr></thead><tbody><tr><td>width</td><td>Number</td><td>是</td><td>文字的容器宽度，当width大于文字实际绘制占据的宽度，textAlign生效</td></tr><tr><td>height</td><td>Number</td><td>是</td><td>文字的容器高度，当height大于lineHeight，verticalAlign属性生效</td></tr><tr><td>lineHeight</td><td>Number</td><td>否</td><td>渲染文字的行高，默认为配置文件里面的lineHeight</td></tr><tr><td>textAlign</td><td>String</td><td>否</td><td>文字水平居中方式，默认left，支持right、center</td></tr><tr><td>verticalAlign</td><td>String</td><td>否</td><td>文字垂直居中的方式，默认为middle，支持top和bottom</td></tr><tr><td>letterSpacing</td><td>Number</td><td>否</td><td>字符间距</td></tr></tbody></table><h3 id="示例" tabindex="-1"><a class="header-anchor" href="#示例" aria-hidden="true">#</a> 示例</h3>`,5),E=["src"],H=e(`<h2 id="canvas" tabindex="-1"><a class="header-anchor" href="#canvas" aria-hidden="true">#</a> canvas</h2><h3 id="特殊属性-2" tabindex="-1"><a class="header-anchor" href="#特殊属性-2" aria-hidden="true">#</a> 特殊属性</h3><table><thead><tr><th>属性</th><th>类型</th><th>是否必填</th><th>说明</th></tr></thead><tbody><tr><td>width</td><td>Number</td><td>否</td><td>canvas 画布的尺寸，与样式的尺寸不是一个概念</td></tr><tr><td>height</td><td>Number</td><td>否</td><td>canvas 画布的尺寸，与样式的尺寸不是一个概念</td></tr><tr><td>autoCreateCanvas</td><td>String</td><td>否</td><td>是否自动创建 canvas，默认为 &quot;false&quot;，有些场景如微信小游戏场景，sharedCavans非业务创建，则需要手动设置canvas 实例</td></tr></tbody></table><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>view</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>container<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>canvas</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>rank<span class="token punctuation">&quot;</span></span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>300<span class="token punctuation">&quot;</span></span> <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>300<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>canvas</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>view</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">let</span> style <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">container</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">width</span><span class="token operator">:</span> <span class="token number">500</span><span class="token punctuation">,</span>
    <span class="token literal-property property">height</span><span class="token operator">:</span> <span class="token number">500</span><span class="token punctuation">,</span>
    <span class="token literal-property property">backgroundColor</span><span class="token operator">:</span> <span class="token string">&#39;#f3f3f3&#39;</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token literal-property property">rank</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">width</span><span class="token operator">:</span> <span class="token number">300</span><span class="token punctuation">,</span>
    <span class="token literal-property property">height</span><span class="token operator">:</span> <span class="token number">300</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> rank <span class="token operator">=</span> Layout<span class="token punctuation">.</span><span class="token function">getElementsById</span><span class="token punctuation">(</span><span class="token string">&#39;rank&#39;</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> <span class="token function-variable function">updateRank</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  rank<span class="token punctuation">.</span><span class="token function">update</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// 手动指定 canvas 实例</span>
rank<span class="token punctuation">.</span>canvas <span class="token operator">=</span> sharedCanvas<span class="token punctuation">;</span> <span class="token comment">// sharedCanvas 为业务自己管理的 canvas 实例</span>

<span class="token comment">// 要求Layout每帧刷新开放数据域 canvas 的绘制</span>
Layout<span class="token punctuation">.</span>ticker<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>updateRank<span class="token punctuation">)</span><span class="token punctuation">;</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,6);function P(p,V){const n=l("ExternalLinkIcon");return r(),i("div",null,[c,t("table",null,[u,t("tbody",null,[h,k,t("tr",null,[v,b,m,t("td",null,[a("与浏览器相同，详见"),t("a",g,[a("文档"),s(n)])])])])]),_,t("p",null,[a("view标签用来页面布局，布局严格遵循"),t("a",f,[a("CSS Flex布局"),s(n)]),a("，节点在Flex属性相互作用的结果可以通过Yoga的"),t("a",y,[a("Playground"),s(n)]),a("试验。")]),x,t("div",q,[w,C,t("p",null,[a("2.图片可以通过API"),t("a",S,[a("loadImgs"),s(n)]),a("实现预加载")])]),A,t("p",null,[a("滚动内容的容器，滚动的前提是正确调用"),t("a",I,[a("updateViewPort"),s(n)])]),N,t("p",null,[a("本渲染引擎调研了常见的H5游戏引擎Laya、Cocos、Egret，他们普遍支持"),t("a",j,[a("AngelCode.com"),s(n)]),a("打包后的配置文件规范，因此biamapfont 同样只支持通过该工具打包后的文件。")]),t("p",null,[a("需要特别注意的是，对于一般的游戏引擎而言，都会在自己的IDE里面将.fnt打包进代码里面，这里为了引擎轻量化，需要通过API"),t("a",B,[a("registBitMapFont"),s(n)]),a("手动注册字体。 然后在标签里面通过font属性声明需要使用的字体。")]),L,t("img",{src:p.$withBase("/imgs/bitmapfont.png"),width:"400"},null,8,E),H])}const F=o(d,[["render",P],["__file","tags.html.vue"]]);export{F as default};
