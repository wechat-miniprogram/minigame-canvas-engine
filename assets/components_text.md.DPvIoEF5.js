import{_ as d,c as l,o,ag as r,j as t,a as e}from"./chunks/framework.CXyc3WCb.js";const m=JSON.parse('{"title":"Text","description":"","frontmatter":{},"headers":[],"relativePath":"components/text.md","filePath":"components/text.md","lastUpdated":1752807996000}'),i={name:"components/text.md"};function h(n,a,c,s,p,b){return o(),l("div",null,a[0]||(a[0]=[r('<h1 id="text" tabindex="-1">Text <a class="header-anchor" href="#text" aria-label="Permalink to &quot;Text&quot;">​</a></h1><p>继承自 <a href="/minigame-canvas-engine/components/element.html">Element</a>。</p><h2 id="特殊属性" tabindex="-1">特殊属性 <a class="header-anchor" href="#特殊属性" aria-label="Permalink to &quot;特殊属性&quot;">​</a></h2><table tabindex="0"><thead><tr><th>属性</th><th>类型</th><th>是否必填</th><th>说明</th></tr></thead><tbody><tr><td>value</td><td>string</td><td>是</td><td>文字内容</td></tr></tbody></table><h2 id="重要版本变更提示" tabindex="-1">重要版本变更提示 <a class="header-anchor" href="#重要版本变更提示" aria-label="Permalink to &quot;重要版本变更提示&quot;">​</a></h2><div class="tip custom-block"><p class="custom-block-title">温馨提示</p><p>从 v1.0.15 版本开始，大幅度重构和优化了文字的渲染。</p></div><ol><li><p>如果文本不设置宽度，Layout 会默认为文字计算文字宽度，这可能使得文字自动计算出来的长度远超预期进而影响预期的页面布局，因此仍然建议手动为文字设置宽度。</p></li><li><p>不再建议通过设置 <code>height</code> 和 <code>lineHeight</code> 为同一个值来实现文字居中：</p><ul><li>如果没有设置高度，文本组件现在会根据内容和换行情况自动计算合适的高度，自动计算的高度会考虑 <code>fontSize</code>、<code>lineHeight</code> 等因素；</li><li>原先的文本垂直居中的特性，可以使用 <code>verticalAlign</code> 来控制文本在容器中的垂直对齐方式；</li></ul></li><li><p>text-overflow 属性行为变更</p><ul><li>之前版本：设置了 <code>width</code> 和 <code>text-overflow: ellipsis</code> 会自动根据宽度截断并显示省略号；</li><li>现在版本：必须同时设置 <code>white-space: nowrap</code>，省略号才会生效，因为文本会默认换行；</li><li>这个改动使文本截断行为更符合 Web 标准；</li></ul></li></ol><h2 id="文字换行规则" tabindex="-1">文字换行规则 <a class="header-anchor" href="#文字换行规则" aria-label="Permalink to &quot;文字换行规则&quot;">​</a></h2><p>Text 组件提供了丰富的文字换行控制能力，主要通过以下样式属性来控制：</p><h4 id="whitespace-样式属性" tabindex="-1">whiteSpace 样式属性 <a class="header-anchor" href="#whitespace-样式属性" aria-label="Permalink to &quot;whiteSpace 样式属性&quot;">​</a></h4><p>控制文本如何处理空白符（空格、制表符）和换行符，whiteSpace 默认为 normal，即文本会默认换行：</p><table tabindex="0"><thead><tr><th>值</th><th>空白符处理</th><th>换行符处理</th><th>自动换行</th><th>说明</th></tr></thead><tbody><tr><td>normal</td><td>合并</td><td>忽略</td><td>允许</td><td>将连续的空白符合并为一个空格，忽略换行符，文本根据容器宽度自动换行，最常用的多行文本展示方式</td></tr><tr><td>nowrap</td><td>合并</td><td>忽略</td><td>禁止</td><td>将连续的空白符合并为一个空格，忽略换行符，文本强制在一行显示， 配合 text-overflow: ellipsis 实现单行省略</td></tr><tr><td>pre</td><td>保留</td><td>保留</td><td>禁止</td><td>保留所有空白符和换行符，但不允许自动换行</td></tr><tr><td>pre-wrap</td><td>保留</td><td>保留</td><td>允许</td><td>保留所有空白符和换行符，同时允许文本自动换行</td></tr><tr><td>pre-line</td><td>合并</td><td>保留</td><td>允许</td><td>合并空白符，保留换行符，允许文本自动换行</td></tr></tbody></table><h4 id="wordbreak-样式属性" tabindex="-1">wordBreak 样式属性 <a class="header-anchor" href="#wordbreak-样式属性" aria-label="Permalink to &quot;wordBreak 样式属性&quot;">​</a></h4><p>控制单词和文本的断行规则，默认为 normal：</p><table tabindex="0"><thead><tr><th>值</th><th>CJK文本</th><th>非CJK文本</th><th>常见用途</th></tr></thead><tbody><tr><td>normal</td><td>允许在字符间断行</td><td>遵循语言默认的断行规则，中文可以在任意字符间断行，英文在单词边界断行</td><td>最常用的断行方式，适合大多数场景</td></tr><tr><td>break-all</td><td>允许在字符间断行</td><td>允许在任意字符间断行，包括单词中间，可能会破坏单词的可读性</td><td>处理超长的连续英文字符，如 hash 值</td></tr></tbody></table><h2 id="注意事项" tabindex="-1">注意事项 <a class="header-anchor" href="#注意事项" aria-label="Permalink to &quot;注意事项&quot;">​</a></h2><ol><li><p>版本 v1.0.15 重要变更：</p><ul><li>不建议主动设置文本高度，让组件自动计算</li><li><code>text-overflow: ellipsis</code> 需要配合 <code>white-space: nowrap</code> 使用</li></ul></li><li><p>文本换行的关键点：</p><ul><li>设置 <code>width</code> 是触发自动换行的前提;</li><li>CJK 文本（中日韩）可以在任意字符间换行;</li><li>英文单词默认在空格、连字符等位置换行;</li><li><code>word-break: break-all</code> 用于强制断词;</li></ul></li></ol><h2 id="在线示例" tabindex="-1">在线示例 <a class="header-anchor" href="#在线示例" aria-label="Permalink to &quot;在线示例&quot;">​</a></h2>',18),t("iframe",{height:"580.0000915527344",style:{width:"100%"},scrolling:"no",title:"Layout Text",src:"https://codepen.io/yuanzm/embed/bGZdjEg?default-tab=html%2Cresult&editable=true",frameborder:"no",loading:"lazy",allowtransparency:"true",allowfullscreen:"true"},[e(" See the Pen "),t("a",{href:"https://codepen.io/yuanzm/pen/bGZdjEg"}," Layout Text"),e(" by yuanzm ("),t("a",{href:"https://codepen.io/yuanzm"},"@yuanzm"),e(") on "),t("a",{href:"https://codepen.io"},"CodePen"),e(". ")],-1)]))}const x=d(i,[["render",h]]);export{m as __pageData,x as default};
