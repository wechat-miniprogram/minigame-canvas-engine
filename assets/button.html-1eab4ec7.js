import{_ as n,o as a,c as s,e as t}from"./app-ff4dd70b.js";const e={},o=t(`<h1 id="button" tabindex="-1"><a class="header-anchor" href="#button" aria-hidden="true">#</a> Button</h1><p>Button 组件是一种常见的需求，当 Button 被点击的时候，自身会有一些状态变化，比如元素会有一定的缩放行为。</p><p>一般的引擎设计，Button 由两部分构成，第一部分是容器，这个容器承载了 Button 的背景色、背景图等内容，第二部分是一个 label，代表 Button 的文本。Layout 同样如此，Button 组件实际上是由一个 View 包裹着 Text 实现的，View 负责背景色和背景图等逻辑的渲染，Text 只关注按钮文案。</p><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>testButton<span class="token punctuation">&quot;</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>邀请<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>当在 xml 声明一个 Button 组件的时候，Layout 实际上做了几个事情：</p><ol><li>创建一个 View 容器，容器样式如下，这是一个绿色背景的矩形，矩形内的元素(即label)会水平和垂直居中。</li></ol><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  width<span class="token operator">:</span> <span class="token number">300</span><span class="token punctuation">,</span>
  height<span class="token operator">:</span> <span class="token number">60</span><span class="token punctuation">,</span>
  borderRadius<span class="token operator">:</span> <span class="token number">10</span><span class="token punctuation">,</span>
  backgroundColor<span class="token operator">:</span> &#39;#34a123&#39;<span class="token punctuation">,</span>
  justifyContent<span class="token operator">:</span> &#39;center&#39;<span class="token punctuation">,</span>
  alignItems<span class="token operator">:</span> &#39;center&#39;<span class="token punctuation">,</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="2"><li>创建一个 Text，默认样式如下：</li></ol><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  color<span class="token operator">:</span> &#39;#ffffff&#39;<span class="token punctuation">,</span> <span class="token comment">// button 容器样式的 color 会透传覆盖这里的默认值</span>
  fontSize<span class="token operator">:</span> <span class="token number">30</span><span class="token punctuation">,</span> <span class="token comment">// button 容器样式的 fontSize 会透传覆盖这里的默认值</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>如果要更改 Button 的默认样式，只需要在 style 声明覆盖即可，比如</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  testButton<span class="token operator">:</span> <span class="token punctuation">{</span>
    color<span class="token operator">:</span> &#39;red&#39;<span class="token punctuation">,</span> <span class="token comment">// 按钮文字会变成红色</span>
    backgroundColor<span class="token operator">:</span> &#39;#f3f3f3&#39;<span class="token punctuation">,</span> <span class="token comment">// 按钮背景色会变成灰色</span>
    ... <span class="token comment">// 其他样式，因为 Button 本身只是个 View + Text，样式可以自由定义</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="特殊属性" tabindex="-1"><a class="header-anchor" href="#特殊属性" aria-hidden="true">#</a> 特殊属性</h2><table><thead><tr><th>属性</th><th>类型</th><th>是否必填</th><th>说明</th></tr></thead><tbody><tr><td>value</td><td>string</td><td>否</td><td>按钮文案，不填默认为 <code>button</code></td></tr></tbody></table><h2 id="实例属性" tabindex="-1"><a class="header-anchor" href="#实例属性" aria-hidden="true">#</a> 实例属性</h2><h3 id="label" tabindex="-1"><a class="header-anchor" href="#label" aria-hidden="true">#</a> label</h3><p>按钮的 Text 组件实例，如果要修改按钮的文案的值和样式等都需要通过 label 来操作。</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> testButton <span class="token operator">=</span> Layout<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&#39;testButton&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

testButton<span class="token punctuation">.</span>label<span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token string">&#39;按钮&#39;</span><span class="token punctuation">;</span>

testButton<span class="token punctuation">.</span>label<span class="token punctuation">.</span>style<span class="token punctuation">.</span>color <span class="token operator">=</span> <span class="token string">&#39;red&#39;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,17),p=[o];function l(c,i){return a(),s("div",null,p)}const d=n(e,[["render",l],["__file","button.html.vue"]]);export{d as default};
