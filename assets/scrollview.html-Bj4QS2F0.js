import{_ as o,c as i,b as s,d as a,e as l,f as e,a as p,r,o as u}from"./app-BF_eLkLB.js";const c={};function d(k,n){const t=r("RouteLink");return u(),i("div",null,[n[14]||(n[14]=s("h1",{id:"scrollview",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#scrollview"},[s("span",null,"ScrollView")])],-1)),s("p",null,[n[1]||(n[1]=a("继承自 ")),l(t,{to:"/components/view.html"},{default:e(()=>n[0]||(n[0]=[a("View")])),_:1}),n[2]||(n[2]=a("。"))]),s("p",null,[n[4]||(n[4]=a("滚动内容的容器，滚动的前提是正确调用")),l(t,{to:"/api/api.html#updateviewport"},{default:e(()=>n[3]||(n[3]=[a("updateViewPort")])),_:1})]),n[15]||(n[15]=p(`<h2 id="标签属性" tabindex="-1"><a class="header-anchor" href="#标签属性"><span>标签属性</span></a></h2><table><thead><tr><th>属性</th><th>类型</th><th>是否必填</th><th>说明</th></tr></thead><tbody><tr><td>scrollX</td><td>string</td><td>否</td><td>是否需要横向滚动，支持 &quot;true&quot;和&quot;false&quot;，默认值为 &quot;false&quot;</td></tr><tr><td>scrollY</td><td>string</td><td>否</td><td>是否需要纵向滚动，支持 &quot;true&quot;和&quot;false&quot;, 默认值为&quot;false&quot;</td></tr></tbody></table><div class="hint-container tip"><p class="hint-container-title">温馨提示</p><p>为了兼容历史版本，默认做了一个逻辑，如果当前纵向内容大于 ScrollView 本身高度会自动开启纵向滚动特性，如果需要关闭，可以强行在标签指定 scrollY = &quot;false&quot;</p></div><div class="language-html line-numbers-mode" data-highlighter="prismjs" data-ext="html" data-title="html"><pre><code><span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>scrollview</span> <span class="token attr-name">scrollY</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>true<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>scrollview</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="属性" tabindex="-1"><a class="header-anchor" href="#属性"><span>属性</span></a></h2>`,5)),s("table",null,[n[13]||(n[13]=s("thead",null,[s("tr",null,[s("th",null,"属性"),s("th",null,"类型"),s("th",null,"说明")])],-1)),s("tbody",null,[n[11]||(n[11]=s("tr",null,[s("td",null,"scrollX"),s("td",null,"boolean"),s("td",null,"动态修改 ScrollView 是否可以横向滚动")],-1)),n[12]||(n[12]=s("tr",null,[s("td",null,"scrollY"),s("td",null,"boolean"),s("td",null,"动态修改 ScrollView 是否可以纵向滚动")],-1)),s("tr",null,[n[6]||(n[6]=s("td",null,"vertivalScrollbar",-1)),s("td",null,[l(t,{to:"/components/scrollbar.html"},{default:e(()=>n[5]||(n[5]=[a("ScrollBar")])),_:1})]),n[7]||(n[7]=s("td",null,"纵向滚动条实例",-1))]),s("tr",null,[n[9]||(n[9]=s("td",null,"horizontalScrollbar",-1)),s("td",null,[l(t,{to:"/components/scrollbar.html"},{default:e(()=>n[8]||(n[8]=[a("ScrollBar")])),_:1})]),n[10]||(n[10]=s("td",null,"横向滚动条实例",-1))])])]),n[16]||(n[16]=p(`<p>当滚动开启时候，会自动插入滚动条组件，反之关闭的时候会删除滚动条组件。</p><div class="hint-container tip"><p class="hint-container-title">兼容性</p><p>滚动条特性 v1.0.4版本开始支持</p></div><p>示例</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token keyword">const</span> list <span class="token operator">=</span> Layout<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&#39;list&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token comment">// 将滚动列表动态设置为禁止纵向滚动</span></span>
<span class="line">list<span class="token punctuation">.</span>scrollY <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// 在 init 之后内部有些异步逻辑取不到 vertivalScrollbar，需要延迟一帧执行</span></span>
<span class="line">Layout<span class="token punctuation">.</span>ticker<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token comment">// 隐藏滚动条</span></span>
<span class="line">  list<span class="token punctuation">.</span>vertivalScrollbar<span class="token punctuation">.</span><span class="token function">hide</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">  <span class="token comment">// 改变滚动条的宽度</span></span>
<span class="line">  list<span class="token punctuation">.</span>vertivalScrollbar<span class="token punctuation">.</span>width <span class="token operator">=</span> <span class="token number">20</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">  <span class="token comment">// 改变滚动条的背景颜色</span></span>
<span class="line">  list<span class="token punctuation">.</span>vertivalScrollbar<span class="token punctuation">.</span>style<span class="token punctuation">.</span>backgroundColor <span class="token operator">=</span> <span class="token string">&#39;red&#39;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="方法" tabindex="-1"><a class="header-anchor" href="#方法"><span>方法</span></a></h2><h3 id="scrollto" tabindex="-1"><a class="header-anchor" href="#scrollto"><span>scrollTo</span></a></h3><p>scrollTo(left: number = 0, top: number = 0, animate: number = true)</p><p>滚动到指定位置，如果当前需要纵向滚动到指定位置且不支持横向滚动，left 传0即可，横向滚动同理。</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token keyword">const</span> list <span class="token operator">=</span> Layout<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&quot;list&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// 列表往上滚动 100</span></span>
<span class="line">list<span class="token punctuation">.</span><span class="token function">scrollTo</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="示例" tabindex="-1"><a class="header-anchor" href="#示例"><span>示例</span></a></h3>`,10)),n[17]||(n[17]=s("iframe",{height:"609.4705810546875",style:{width:"100%"},scrolling:"no",title:"Layout RankList",src:"https://codepen.io/yuanzm/embed/QWZybox?default-tab=html%2Cresult&editable=true",frameborder:"no",loading:"lazy",allowtransparency:"true",allowfullscreen:"true"},[a(" See the Pen "),s("a",{href:"https://codepen.io/yuanzm/pen/QWZybox"}," Layout RankList"),a(" by yuanzm ("),s("a",{href:"https://codepen.io/yuanzm"},"@yuanzm"),a(") on "),s("a",{href:"https://codepen.io"},"CodePen"),a(". ")],-1))])}const v=o(c,[["render",d],["__file","scrollview.html.vue"]]),b=JSON.parse('{"path":"/components/scrollview.html","title":"ScrollView","lang":"en-US","frontmatter":{},"headers":[{"level":2,"title":"标签属性","slug":"标签属性","link":"#标签属性","children":[]},{"level":2,"title":"属性","slug":"属性","link":"#属性","children":[]},{"level":2,"title":"方法","slug":"方法","link":"#方法","children":[{"level":3,"title":"scrollTo","slug":"scrollto","link":"#scrollto","children":[]},{"level":3,"title":"示例","slug":"示例","link":"#示例","children":[]}]}],"git":{"updatedTime":1729783845000},"filePathRelative":"components/scrollview.md"}');export{v as comp,b as data};
