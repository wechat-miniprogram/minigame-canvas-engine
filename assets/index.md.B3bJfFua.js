import{_ as a,c as t,o as n,ag as i}from"./chunks/framework.BpL07XgQ.js";const r="/minigame-canvas-engine/assets/screenshot.C3HF2E9I.gif",s="/minigame-canvas-engine/assets/demo.CQDBv2A7.png",o="/minigame-canvas-engine/assets/ditiepaoku.DuZWsAjc.png",p="/minigame-canvas-engine/assets/dazhanggui.BYsadwcI.jpeg",l="/minigame-canvas-engine/assets/jiuchongshilian.rd5HDke4.jpeg",c="/minigame-canvas-engine/assets/lvxingchuanchuan.CG8ARK1R.jpeg",d="/minigame-canvas-engine/assets/qq.CyD-3ers.jpg",w=JSON.parse('{"title":"简介","description":"","frontmatter":{},"headers":[],"relativePath":"index.md","filePath":"index.md","lastUpdated":1745475820000}'),m={name:"index.md"};function g(h,e,_,u,f,b){return n(),t("div",null,e[0]||(e[0]=[i('<h1 id="简介" tabindex="-1">简介 <a class="header-anchor" href="#简介" aria-label="Permalink to &quot;简介&quot;">​</a></h1><p>当我们开发一个canvas应用的时候，出于效率的考量，免不了要选择一个渲染引擎（比如<strong>PixiJS</strong>)或者工具链更完备的游戏引擎（比如<strong>Cocos Creator</strong>、<strong>Layabox</strong>)。</p><p>渲染引擎通常会有Sprite的概念，一个完整的界面会由很多的Sprite组成，如果编写复杂一点的界面，代码里面会充斥创建精灵、设置精灵位置和样式的“重复代码”，最终我们得到了极致的渲染性能却牺牲了代码的可读性。</p><p>为了解决这个问题，游戏引擎通常会有配套的IDE，界面通过拖拽即可生成，最终导出场景配置文件，这大大方便了UI开发，但是游戏引擎一般都很庞大，有时候我们仅仅想开发个好友排行榜。</p><p>如果有一款渲染引擎，既能用配置文件的方式来表达界面，又可以做到轻量级，将会大大满足我们开发轻量级 canvas 应用的场景，minigame-canvas-engine 应运而生(后面简称 <strong>Layout</strong> )</p><p>Layout 的目标在于用 Web 的开发方式来开发简单的 Canvas 应用。</p><p>有兴趣可以查看详细原理介绍<a href="https://segmentfault.com/a/1190000021297495?_ea=27021986" target="_blank" rel="noreferrer">文章</a>。</p><h2 id="web端调试" tabindex="-1">web端调试 <a class="header-anchor" href="#web端调试" aria-label="Permalink to &quot;web端调试&quot;">​</a></h2><p>为了方便调试，可以基于 codepen <a href="https://codepen.io/pen?template=VwEeLKw" target="_blank" rel="noreferrer">模板</a> 构建demo，更多效果可以查看<a href="https://codepen.io/collection/PYrdpO" target="_blank" rel="noreferrer">Layout demo 合集</a>，旧版本<a href="https://wechat-miniprogram.github.io/minigame-canvas-engine/playground.html" target="_blank" rel="noreferrer">Playground</a>已不再维护。</p><h2 id="效果预览" tabindex="-1">效果预览 <a class="header-anchor" href="#效果预览" aria-label="Permalink to &quot;效果预览&quot;">​</a></h2><img src="'+r+'" width="300"><h2 id="谁在使用" tabindex="-1">谁在使用 <a class="header-anchor" href="#谁在使用" aria-label="Permalink to &quot;谁在使用&quot;">​</a></h2><p>目前在微信小游戏平台已经超过3000+游戏使用 Layout 来开发开放数据域能力。</p><p><img src="'+s+'" width="120" style="display:inline;"> <img style="display:inline;" src="'+o+'" width="120"> <img style="display:inline;" src="'+p+'" width="120"> <img style="display:inline;" src="'+l+'" width="120"> <img style="display:inline;" src="'+c+'" width="120"></p><h2 id="交流群" tabindex="-1">交流群 <a class="header-anchor" href="#交流群" aria-label="Permalink to &quot;交流群&quot;">​</a></h2><p>如果遇到 Layout 是用上的问题或者有合理的需求想要支持，欢迎加入 Layout 交流QQ群探讨，如需反馈问题，请基于 codepen <a href="https://codepen.io/pen?template=VwEeLKw" target="_blank" rel="noreferrer">模板</a> 构建可复现问题的最小demo。</p><img src="'+d+'" width="200">',17)]))}const v=a(m,[["render",g]]);export{w as __pageData,v as default};
